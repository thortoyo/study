---------------------------------------------------------------------
AGC039 A
---------------------------------------------------------------------
連続文字
2	a a b
	  *		1回
3	a a a b
	  *		1回
4	a a a a b
	  *   *		2回
5	a a a a a b
	  *   * 	2回	n / 2 回
端っこ
	a b c d a	
	        *	1回
	a b c a a	
	        *	1回
	a b a a a	
	    *   *	2回
	a a b a a	
	*     *		2回
最初と最後
	a b a a/a b a a/a b a a
	      *       *       *

---------------------------------------------------------------------
AGC039 B
---------------------------------------------------------------------
頂点は200、辺は40000が最大なので、全部順番に調べれればOK
ある頂点から辺をたどると、必ず隣り合う集合になる。
V1 と Vk は特別で、となりあう集合が1つしかない。
辺がない頂点は、独立の集合にして問題ない。
出自数が1の頂点は、隣り合う集合が2個ある集合にいれても仕方ない？
なので、こいつを探して、V1にしてみる？



---------------------------------------------------------------------
AGC039 C
---------------------------------------------------------------------
011
001
000
100
110
111
011

1011
0101
0010
1001
0100
1010
1101
0110
1011

0000
1000
1100
1110
1111
0111
0011
0001
0000

000
100
110
111
011
001
000

101
010
101


1 0 1
2 3 6

1 1 0
2 4 7

1 1 1
2 4 8

1010
0101

110011
011001
001100
100110
110011


---------------------------------------------------------------------
ABC144 C
---------------------------------------------------------------------
因数分解して、全組み合わせを見て、数字の合計が一番小さいのを選ぶ。

0 1 -> 2
0 1 2 -> 3
1 << 0	1
1 << 1	2
1 << 2	4

16
2 * 2 * 2 * 2
4*4


---------------------------------------------------------------------
ABC145 D
---------------------------------------------------------------------
(6,6) だとすると
(1,2) (2,4) (4,5) (6,6)
(1,2) (3,3) (4,5) (6,6)
(1,2) (3,3) (5,4) (6,6)
(2,1) (3,3) (5,4) (6,6)
どっちの方法を使っても一度に増える座標の合計は 3
なので、XとYを足した合計は3の倍数である必要がある。
で、(X+Y)/3 で必要な手数が出る。
それが 出たら、X と Y から引く。
そこで マイナスになったら NG
あとは単純な格子の場合の数。
X最大は 10^6 だけど、だいたい 1/3 になる
けど、それが X と Y 両方あるとでかいなあ。。。
10^6 = 1,000,000 = 1M
X Y 両方あったら 1T
DPではできない。
 (X+Y)! / (X! * Y!)
で計算できそう。
今回階乗が多いな。

---------------------------------------------------------------------
ABC146 D
---------------------------------------------------------------------
辺を塗り分けるか。
どうやったら辺を塗り分ける判定ができる？
適当に割り当ててみる？
木！
見落としてた！
木やったら簡単。
辺を順番に見ていきながら、同じ頂点からのものならインクリメントしていく。
出し元ノードが変わったら数字を元に戻す。
先ノードにすでにその番号の辺が、、、いや、木だから無い！



-----------------------------------------------------------------------
sumitb2019 D - Lucky PIN
-----------------------------------------------------------------------
順番を守りながら3つ数字を選ぶ。
Nは30000。3*10^4
単純に列挙するのは O(N^3) なので無理。
左から順に処理
最初の三文字の時点では、1個。
最大でも1000個なので、setで管理。
現状でありうる上位2桁を覚えておく。
新たな1桁と、それら上位のセットを全部作って、setに乗せる。
それから新たな1桁を使って、上位のセットを追加する。
 1桁目を2桁目に入れて、新1桁を1桁目に入れる。
 これを上位セットに追加。


-----------------------------------------------------------------------
sumitb2019 E - Colorful Hats 2
-----------------------------------------------------------------------
前から単純に数えていいのか？
i - Ai
0 1 2 0 0 1
1 1 1 2 3 2
          3



